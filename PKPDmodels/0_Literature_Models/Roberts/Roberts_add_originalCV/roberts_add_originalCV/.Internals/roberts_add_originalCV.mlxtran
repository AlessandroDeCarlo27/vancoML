<DATAFILE>

[FILEINFO]
file='../../../../../../data/PKPDmodel/dataset_mx_crcl.csv'
delimiter = comma
header = {C, ID, TIME, Y, MDV, EVID, AMT, RATE, AnionGap, BUN, Ca, Chloride, Creatinine, Glucose, HCO3, HCT, Hb, P, PLT, K, Na, WBC, LacticAcid, HR, Temperature, AGE, SEX, WT, CrCl}

[CONTENT]
ID = {use=identifier}
TIME = {use=time}
Y = {use=observation, name=Y, type=continuous}
MDV = {use=missingdependentvariable}
EVID = {use=eventidentifier}
AMT = {use=amount}
RATE = {use=rate}
AGE = {use=covariate, type=continuous}
SEX = {use=covariate, type=categorical}
WT = {use=covariate, type=continuous}
CrCl = {use=covariate, type=continuous}

[FILTER]
dataset_mx_crcl_filtered = {origin='../../../../../../data/PKPDmodel/dataset_mx_crcl.csv', filter={{removeIds='WT==1'}}}

[APPLICATION]
computation=dataset_mx_crcl_filtered

<MODEL>

[POPULATION]
DEFINITION:
V_pop = {distribution=logNormal, typical=1.53, sd=0.112}
Cl_pop = {distribution=logNormal, typical=4.58, sd=0.311}
omega_V = {distribution=normal, typical=0.374, sd=46}
omega_Cl = {distribution=normal, typical=0.389, sd=39}

[COVARIATE]
input = {AGE, CrCl, WT, SEX}

SEX = {type=categorical, categories={0, 1}}

EQUATION:
CrCl_log_scaled = log(CrCl/100)
logWT = log(WT)

[INDIVIDUAL]
input = {Cl_pop, omega_Cl, V_pop, omega_V, CrCl_log_scaled, beta_Cl_CrCl_log_scaled, logWT, beta_V_logWT}

DEFINITION:
Cl = {distribution=logNormal, typical=Cl_pop, covariate=CrCl_log_scaled, coefficient=beta_Cl_CrCl_log_scaled, sd=omega_Cl}
V = {distribution=logNormal, typical=V_pop, covariate=logWT, coefficient=beta_V_logWT, sd=omega_V}

[LONGITUDINAL]
input = {a}

file = 'lib:infusion_1cpt_VCl.txt'

DEFINITION:
Y = {distribution=normal, prediction=Cc, errorModel=constant(a)}

<FIT>
data = Y
model = Y

<PARAMETER>
Cl_pop = {value=4.58, method=MAP}
V_pop = {value=1.53, method=MAP}
a = {value=1, method=MLE}
beta_Cl_CrCl_log_scaled = {value=1, method=FIXED}
beta_V_logWT = {value=1, method=FIXED}
omega_Cl = {value=0.389, method=MAP}
omega_V = {value=0.374, method=MAP}

<MONOLIX>

[TASKS]
populationParameters()
individualParameters(method = {conditionalMean, conditionalMode })
fim(method = StochasticApproximation)
logLikelihood(method = ImportanceSampling)
plotResult(method = {indfits, parameterdistribution, covariancemodeldiagnosis, covariatemodeldiagnosis, obspred, vpc, residualsscatter, residualsdistribution, randomeffects, saemresults })

[SETTINGS]
GLOBAL:
exportpath = '../'

